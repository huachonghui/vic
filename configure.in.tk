dnl autoconf rules to find tcl & tk 
dnl $Header$ (LBL)

AC_ARG_WITH(ucltcl,	--with-ucltcl=path	specify a pathname for UCL's tcl, ucltcl=$withval, ucltcl="")

AC_ARG_WITH(tcl,	--with-tcl=path	specify a pathname for tcl, d=$withval, d="")
if test "$ucltcl" != no; then
	if test -z "$ucltcl"; then 
		# UCL defaults
		ucltcl=../tcl-8.0
	fi
	if test ! -d "$ucltcl" ; then
		echo "'$d' is not a directory"
		exit 1
	fi
	V_INCLUDE_TCL="-I$ucltcl/generic"
	case "$target" in 
	  *-*-freebsd*)
		V_LIB_TCL="$ucltcl/unix/libtcl80.a"
		;;
	  *)
		V_LIB_TCL="$ucltcl/unix/libtcl8.0.a"
		;;
	esac

	V_LIBRARY_TCL=$ucltcl/library
	echo "Using UCL's tcl-8.0: $ucltcl"
		
elif test "$d" != "" ; then 
	echo "Not using UCL tcl - You're on your own!"
	if test ! -d $d ; then 
		echo "'$d' is not a directory"
		exit 1
	fi
	V_INCLUDE_TCL=-I$d/include
	if test ! -r $d/include/tcl.h ; then
		echo "can't find tcl.h in $d/include"
		exit 1
	fi
	places="$d/lib/libtcl8.0.so \
		$d/lib/libtcl8.0.a \
		$d/lib/libtcl.so \
		$d/lib/libtcl.a"
	V_LIB_TCL=FAIL
	for dir in $places; do
		if test -r $dir ; then
			V_LIB_TCL=$dir
			break
		fi
	done
	if test $V_LIB_TCL = FAIL ; then
		echo "can't find libtcl.a in $d/lib"
		exit 1
	fi
	places="$d/lib/tcl-8.0 \
		$d/lib/tcl8.0 \
		$d/lib/tcl"
	V_LIBRARY_TCL=FAIL
	for dir in $places; do
		if test -r $dir/init.tcl ; then
			V_LIBRARY_TCL=$dir
			break
		fi
	done
	if test $V_LIBRARY_TCL = FAIL ; then
		echo "can't find init.tcl in $d/lib/tcl"
		exit 1
	fi
else
	echo "Not using UCL tcl - You're on your own!"
	AC_TEST_CPP([#include <tcl.h>], V_INCLUDE_TCL="", V_INCLUDE_TCL=FAIL)
	if test "$V_INCLUDE_TCL" = FAIL; then
		echo "checking for tcl.h"
		places="$PWD/../tcl-8.0 \
			$PWD/../tcl8.0 \
			$PWD/../tcl \
			/cs/research/mice/starship/common/$OPSYS/include/tcl8.0 \
			/usr/local/include/tcl8.0 \
			/usr/src/local/tcl8.0 \
			/import/tcl/include/tcl8.0 \
			$prefix/include \
			$x_includes/tk \
			$x_includes \
			/usr/local/include \
			/usr/contrib/include \
			/usr/include"
		for dir in $places; do
			if test -r $dir/tcl.h ; then
				V_INCLUDE_TCL=-I$dir
			        break
			fi
		done
		if test "$V_INCLUDE_TCL" = FAIL; then
			echo "can't find tcl.h"
			exit 1
		fi
	fi
	AC_CHECK_LIB(tcl8.0, main, V_LIB_TCL="-ltcl8.0", V_LIB_TCL="FAIL")
	if test "$V_LIB_TCL" = FAIL; then
		echo "checking for libtcl.a"
		places="$PWD/../tcl-8.0/unix \
                        $PWD/../tcl8.0/unix \
                        $PWD/../tcl/unix \
                        /cs/research/mice/starship/common/$OPSYS/lib \
			/usr/local/lib \
			$prefix/lib \
			$x_libraries \
			/usr/contrib/lib \
			/usr/local/lib \
			/usr/lib \
			$PWD/../tcl8.0 \
			/usr/src/local/tcl8.0 \
			/import/tcl/lib/tcl8.0"
		for dir in $places; do
			if test -r $dir/libtcl8.0.so -o -r $dir/libtcl8.0.a; then
				V_LIB_TCL="-L$dir -ltcl8.0"
				break
			fi
			if test -r $dir/libtcl.so -o -r $dir/libtcl.a; then
				V_LIB_TCL="-L$dir -ltcl"
				break
			fi
		done
		if test "$V_LIB_TCL" = FAIL; then
			echo "can't find libtcl.a"
			exit 1
		else
			if test $solaris ; then
				V_LIB_TCL="-R$dir $V_LIB_TCL"
			fi
		fi
	fi
	echo "checking for tcl/init.tcl"
	V_LIBRARY_TCL=FAIL
	places="$PWD/../tcl-8.0/library \
		$PWD/../tcl8.0/library \
                $PWD/../tcl/library \
                /cs/research/mice/starship/common/$OPSYS/lib/tcl8.0 \
		/usr/local/lib/tcl8.0 \
		/usr/contrib/lib/tcl8.0 \
		/usr/lib/tcl8.0 \
		/usr/lib/tk/tcl8.0 \
		/import/tcl/lib/tcl8.0 \
		$prefix/lib/tcl8.0 \
		$x_libraries/tcl8.0 \
		/usr/local/lib/tcl \
		/usr/lib/tcl \
		$x_libraries/tcl"
	for dir in $places; do
		if test -r $dir/init.tcl; then
			V_LIBRARY_TCL=$dir
			break
		fi
	done
	if test "$V_LIBRARY_TCL" = FAIL; then
		echo "can't find tcl/init.tcl"
		exit 1
	fi
fi
AC_SUBST(V_INCLUDE_TCL)
AC_SUBST(V_LIB_TCL)
AC_SUBST(V_LIBRARY_TCL)

AC_ARG_WITH(ucltk,	--with-ucltk=path	specify a pathname for UCL's tk, ucltk=$withval, ucltk="")

AC_ARG_WITH(tk,	--with-tk=path	specify a pathname for tk, d=$withval, d="")

if test "$ucltk" != no; then
	if test -z "$ucltk"; then 
		# UCL defaults
		ucltk=../tk-8.0
	fi
	if test ! -d "$ucltk" ; then
		echo "'$d' is not a directory"
		exit 1
	fi
	V_INCLUDE_TK="-I$ucltk/generic"

	case "$target" in 
	  *-*-freebsd*)
		V_LIB_TK="$ucltk/unix/libtk80.a"
		;;
	  *)
		V_LIB_TK="$ucltk/unix/libtk8.0.a"
		;;
	esac
	V_LIBRARY_TK=$ucltk/library
	echo "Using UCL's tk-8.0: $ucltk"
		
elif test "$d" != "" ; then 
	echo "Not using UCL tk - You're on your own!"
	if test ! -d $d ; then 
		echo "'$d' is not a directory"
		exit 1
	fi
	V_INCLUDE_TK=-I$d/include
	if test ! -r $d/include/tk.h ; then
		echo "can't find tk.h in $d/include"
		exit 1
	fi
	places="$d/lib/libtk8.0.so \
		$d/lib/libtk8.0.a \
		$d/lib/libtk.so \
		$d/lib/libtk.a"
	V_LIB_TK=FAIL
	for dir in $places; do
		if test -r $dir ; then
			V_LIB_TK=$dir
			break
		fi
	done
	if test $V_LIB_TK = FAIL ; then
		echo "can't find libtk.a in $d/lib"
		exit 1
	fi
	places="$d/lib/tk8.0 \
		$d/lib/tk"
	V_LIBRARY_TK=FAIL
	for dir in $places; do
		if test -r $dir/tk.tcl ; then
			V_LIBRARY_TK=$dir
			break
		fi
	done
	if test $V_LIBRARY_TK = FAIL ; then
		echo "can't find tk.tcl in $d/lib/tk"
		exit 1
	fi
else
	echo "Not using UCL tk - You're on your own!"
	AC_TEST_CPP([#include <tk.h>], V_INCLUDE_TK="", V_INCLUDE_TK=FAIL)
	if test "$V_INCLUDE_TK" = FAIL; then
		echo "checking for tk.h"
		V_INCLUDE_TK=""
		places="$PWD/../tk8.0/generic \
	                $PWD/../tk-8.0/generic \
       		        $PWD/../tk/generic \
       		        /cs/research/mice/starship/common/$OPSYS/include \
			/usr/local/include \
			$prefix/include \
			/usr/contrib/include \
			/usr/include/tcl \
			/usr/include\
			$x_includes/tk \
			$x_includes \
			$PWD/../tk8.0 \
			/usr/src/local/tk8.0 \
			/import/tcl/include/tk8.0"
		for dir in $places; do
			if test -r $dir/tk.h ; then
				V_INCLUDE_TK=-I$dir
				break
			fi
		done
		if test "$V_INCLUDE_TK" = FAIL; then
			echo "can't find tk.h"
			exit 1
		fi
	fi
	AC_CHECK_LIB(tk8.0, main, V_LIB_TK="-ltk8.0", V_LIB_TK="FAIL")
	if test "$V_LIB_TK" = FAIL; then
		echo "checking for libtk.a"
		places="$PWD/../tk-8.0/unix \
			$PWD/../tk8.0/unix \
                	$PWD/../tk/unix \
                	/cs/research/mice/starship/common/$OPSYS/lib \
			/usr/local/lib \
			/usr/contrib/lib \
			/usr/lib \
			/usr/lib/tk \
			/import/tcl/lib \
			$PWD/../tk8.0 \
			/usr/src/local/tk8.0 \
			$prefix/lib \
			$x_libraries"
		for dir in $places; do
			if test -r $dir/libtk8.0.so -o -r $dir/libtk8.0.a; then
				V_LIB_TK="-L$dir -ltk8.0"
				break
			fi
			if test -r $dir/libtk.so -o -r $dir/libtk.a; then
				V_LIB_TK="-L$dir -ltk"
				break
			fi
		done
		if test "$V_LIB_TK" = FAIL; then	
			echo "can't find libtk.a"
			exit 1
		else
			if test $solaris ; then
				V_LIB_TK="-R$dir $V_LIB_TK"
			fi
		fi
	fi
	echo "checking for tk/tk.tcl"
	V_LIBRARY_TK=FAIL
	places="$PWD/../tk-8.0/library \
		$PWD/../tk8.0/library \
               	$PWD/../tk/library \
               	/cs/research/mice/starship/common/$OPSYS/lib/tk8.0 \
		/usr/local/lib/tk8.0 \
		/usr/contrib/lib/tk8.0 \
		/usr/lib/tk8.0 \
		/usr/lib/tk/tk8.0 \
		/import/tcl/lib/tk8.0 \
		$prefix/lib/tk8.0 \
		$x_libraries/tk8.0 \
		$PWD/../tk8.0/library \
		/usr/src/local/tk8.0/library \
		/usr/local/lib/tk \
		/usr/lib/tk \
		$x_libraries/tk"
	for dir in $places; do
		if test -r $dir/tk.tcl; then
			V_LIBRARY_TK=$dir
			break
		fi
	done
	if test "$V_LIBRARY_TK" = FAIL; then
		echo "can't find tk/tk.tcl"
		exit 1
	fi
fi
if test -r $V_LIBRARY_TK/optionMenu.tcl ; then
	V_TKDOSNAMES='$(LIBRARY_TK)/optionMenu.tcl $(LIBRARY_TK)/scrollbar.tcl'
	V_NEED_DL=""
else
	V_TKDOSNAMES='$(LIBRARY_TK)/optMenu.tcl $(LIBRARY_TK)/scrlbar.tcl'
	V_NEED_DL=YES
fi
AC_SUBST(V_TKDOSNAMES)
AC_SUBST(V_INCLUDE_TK)
AC_SUBST(V_LIB_TK)
AC_SUBST(V_LIBRARY_TK)

